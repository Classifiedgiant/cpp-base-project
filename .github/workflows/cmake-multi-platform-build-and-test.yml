# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      bump_tag:
        type: boolean
        description: bump git tag
        required: false
        default: false
      bump_version:
        type: choice
        description: Type of git tag bump
        required: true
        options:
        - 'patch'
        - 'minor'
        - 'major'

jobs:

  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        # Original values
        #os: [ubuntu-latest, windows-latest]
        # build_type: [Release]
        #c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
    - uses: actions/checkout@v3

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Install Conan Dependencies
      # Window only config at the moment
      run: >
        conan profile detect &&
        conan install ${{ github.workspace }} --build=missing

    - name: Configure CMake
      run: >
        cmake --preset conan-default

    - name: Build
      run: cmake --build --preset conan-release

  tag-deployment:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth : 0 # required for tags

      - uses: zwaldowski/semver-release-action@v4
        if: ${{ github.event.inputs.bump_tag }}
        id: sem-ver
        with:
          dry_run: false
          bump: ${{ github.event.inputs.bump_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: tag version
        if: ${{ github.event.inputs.bump_version }}
        run: git tag v${{ steps.sem-ver.outputs.version_tag }} && git push origin --tags


      # - name: Write tag to file
      #   run: >
      #     echo "MAJOR ${{steps.major.outputs.major_version}}\nMINOR ${{steps.major.outputs.minor_version}}\nPATCH ${{steps.major.outputs.patch_version}}\n" >>
      #     ${{github.workspace}}/src/version.txt

